<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

 
<sqlMap namespace="tempposts">
	
	<!-- 
		임시게시판 게시글 등록하기
	-->
	<insert id="insertTempPost" parameterClass="com.community.vo.TempPost">
		insert into comm_temp_post
			(post_temp_no, post_title, post_content, board_no, emp_no)
		values
			(#post_temp_no#, #post_title#, #post_content#, #board_no#, #emp_no#)	
	</insert>
	
	<!-- 
		임시게시판 게시글 수정하기
	-->
	<update id="updateTempPost" parameterClass="com.community.vo.TempPost">
		update
			comm_temp_post
		set
			post_title = #title#,
			post_content = #content#,
			post_important = #important#,
			board_no = #board#
			post_deleted = #deleted#,
			post_updated_date = sysdate,
			post_deleted_date = sysdate
			
		where
			post_temp_no = #tempNo#		
	</update>
		
	<!--
		임시게시판 게시글 삭제하기
	 -->
	<delete id="deleteTempPost" parameterClass="int">
		delete from
			comm_temp_post
		where
			post_temp_no = #value#
	</delete>
	
	<!-- 
		임시게시판 게시글 전체 글 갯수 조회하기
	 -->
		<select id="getTotalRows" resultClass="int">
		select
			count(*)
		from
			comm_temp_post
		where
			post_deleted = 'N'
			post_board_no = 103
			<dynamic>
				<isNotNull property="opt">
					<isEqual property="opt" compareValue="title">
						and post_title like '%' || #keyword# || '%'
					</isEqual>
					<isEqual property="opt" compareValue="writer">
						and emp_no in (select emp_no
										from comm_employees
										where emp_name = #keyword#)
					</isEqual>
					<isEqual property="opt" compareValue="content">
						and post_content like '%' || #keyword# || '%'
					</isEqual>
				</isNotNull>
			</dynamic>
	</select>
	
	 <!-- 
	 	임시게시판 게시글 전체목록 조회 및 페이징처리하기
	  -->
	 	<select id="getTempPost" parameterClass="map" resultClass="com.community.vo.TempPost">
		select
			A.post_temp_no 				as tempNo,
			A.board_no					as "board.boardNo",
			A.post_title 				as title,
			A.post_content 				as content,
			A.post_important 			as important,
			A.post_created_date 		as createdDate,
			A.emp_no 					as "employee.empNo",
			B.emp_name 					as "employee.name"
		from
			(select
				row_number() over (order by post_no desc) row_numbers,
				post_temp_no,
				board_no,
				post_title,
				post_content,
				post_important,
				post_created_date,
				board_no,
				emp_no
			from
				comm_temp_post
			where
				post_deleted = 'N'
				board_no = 103
			<dynamic>
				<isNotNull property="opt">
					<isEqual property="opt" compareValue="title">
						and post_title like '%' || #keyword# || '%'
					</isEqual>
					<isEqual property="opt" compareValue="writer">
						and emp_no in (select emp_no
										from comm_employees
										where emp_name = #keyword#)
					</isEqual>
					<isEqual property="opt" compareValue="content">
						and post_content like '%' || #keyword# || '%'
					</isEqual>
				</isNotNull>
			</dynamic>	
			) A, comm_employees B		
		where
			A.emp_no = B.emp_name
			and A.row_numbers between #begin# and #end#	
		order by
			A.post_temp_no desc
	</select>
	  
	 <!-- 
	  	임시게시판 게시글 번호를 전달받아 게시글 상세정보 조회하기
	  -->
	 <select id="getTempPostByNo" parameterClass="int" resultClass="com.community.vo.TempPost">
		select
			A.post_temp_no 				as tempNo,
			A.board_no 					as "board.boardNo",
			A.post_title 				as title,
			A.post_content 				as content,
			A.post_important 			as important,
			A.post_created_date 		as createdDate,
			A.board_no					as boardNo,
			A.emp_no 					as "employee.empNo",
			B.emp_name 					as "employee.name"
		from
			comm_temp_post A, comm_employees B
		where
			A.board_no = 103
			and A.post_temp_no = #value#	
	</select>
	
</sqlMap>

